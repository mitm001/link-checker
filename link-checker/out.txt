jme3/external/blender.html:444:<p>For the managing of assets in general, be sure to read the <a href="#../../tutorials:intermediate/multi-media_asset_pipeline.adoc" class="page unresolved">Asset Pipeline Documentation</a>. It contains vital information on how to manage your asset files.</p>
jme3/external/blender.html:779:<p>There are many 3D model <a href="#../../jme3/features.html#supported-external-file-types#" class="page unresolved">Supported External File Types</a> for jMonkeyEngine. Some of them bake your actions automatically on export, others don&#8217;t. Baking is a destructive process so it is recommended that you test the animation in-game first. If your animations are all messed up, try baking them or use a different exporter.</p>
jme3/external/3dsmax.html:437:<p>For the managing of assets in general, be sure to read the <a href="#../../tutorials:intermediate/multi-media_asset_pipeline.adoc" class="page unresolved">Asset Pipeline Documentation</a>. It contains vital information on how to manage your asset files.</p>
jme3/advanced/nifty_gui.html:570:<p><a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-testdata/src/main/resources/Interface/Nifty/HelloJme.xml">HelloJme.xml</a> - Can be found in <a href="#../../sdk/sample_code.adoc#jme3testdata-assets#" class="page unresolved">jme-testdata/Interface/Nifty</a> also.</p>
jme3/advanced/nifty_gui.html:580:<p><a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/niftygui/TestNiftyGui.java">TestNiftyGui.java</a> - Can be found in <a href="#../../sdk/sample_code.adoc#the-jme3tests-project-template#" class="page unresolved">jme3 tests</a> also.</p>
jme3/advanced/nifty_gui.html:583:<p><a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/niftygui/TestNiftyToMesh.java">TestNiftyToMesh.java</a> - Can be found in <a href="#../../sdk/sample_code.adoc#the-jme3tests-project-template#" class="page unresolved">jme3 tests</a> also.</p>
jme3/advanced/update_loop.html:507:<p>In a trivial <a href="../intermediate/simpleapplication.html" class="page">SimpleApplication</a> (such as a <a href="#../../tutorials:beginner.adoc" class="page unresolved">Hello World tutorial</a>), all code is either in the <code>simpleInitApp()</code> (initialization) or <code>simpleUpdate()</code> (behaviour) method â€“ or in a helper method/class that is called from one of these two. This trivial approach will make your main class very long, hard to read, and hard to maintain. You don&#8217;t need to load the whole scene at once, and you don&#8217;t need to run all conditionals tests all the time.</p>
jme3/advanced/material_definitions.html:462:<p>If you use one custom material with certain settings very often, learn about storing material settings in <a href="j3m_material_files.html" class="page">j3m Material Files</a>. You either <a href="#../../sdk/material_editing.adoc" class="page unresolved">use the jMonkeyEngine SDK to create .j3m files</a> (user-friendly), or you <a href="j3m_material_files.html" class="page">write .j3m files in a text editor</a> (IDE-independent).</p>
jme3/advanced/material_definitions.html:558:<p>For details see also: <a href="#../../tutorials:intermediate/how_to_use_materials.adoc" class="page unresolved">How to Use Materials</a></p>
jme3/advanced/materials_overview.html:457:<p>Find out quickly <a href="#../../tutorials:intermediate/how_to_use_materials.adoc" class="page unresolved">How to Use Materials</a>, including the most commonly used code samples and RenderStates.<br>
jme3/advanced/materials_overview.html:482:2) Use <a href="#../../sdk/material_editing.adoc" class="page unresolved">the SDK&#8217;s visual material editor</a> to try out and save material settings easily.<br>
jme3/advanced/materials_overview.html:483:3) The <a href="#../../sdk/code_editor.adoc" class="page unresolved">SDK&#8217;s Palette</a> contains drag&amp;drop code snippets for loading materials.</p>
jme3/advanced/materials_overview.html:537:<p>See also: <a href="#../../jme3/beginner/hello_material.adoc" class="page unresolved">Hello Material</a></p>
jme3/advanced/materials_overview.html:598:<p>See also: <a href="#../../jme3/beginner/hello_terrain.adoc" class="page unresolved">Hello Terrain</a></p>
jme3/advanced/materials_overview.html:677:<p>See also: <a href="#../../jme3/beginner/hello_effects.adoc" class="page unresolved">Hello Effects</a></p>
jme3/advanced/materials_overview.html:738:<p>See also: <a href="#../../jme3/beginner/hello_material.adoc" class="page unresolved">Hello Material</a></p>
jme3/advanced/animation.html:447:<p>What is required for an animated model? (<a href="#../../tutorials:intermediate/terminology.adoc#animation" class="page unresolved">See also: Animation terminology</a></p>
jme3/advanced/terrain.html:452:<p><strong>Real-time editing:</strong> <a href="#sdk:sdk/terrain_editor.adoc" class="page unresolved">TerraMonkey terrains are editable in jMonkeyEngine SDK</a>, and you are able to modify them in real time, for example by raising and lowering the terrain.</p>
jme3/advanced/walking_character.html:437:<p>In the <a href="#tutorial:beginner/hello_collision.adoc" class="page unresolved">Hello Collision</a> tutorial and the <a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/bullet/TestQ3.java">TestQ3.java</a> code sample you have seen how to create collidable landscapes and walk around in a first-person perspective. The first-person camera is enclosed by a collision shape and is steered by the BetterCharacterControl.</p>
