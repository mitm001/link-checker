jme3/external/blender.html:444:<p>For the managing of assets in general, be sure to read the <a href="#../../tutorials:intermediate/multi-media_asset_pipeline.adoc" class="page unresolved">Asset Pipeline Documentation</a>. It contains vital information on how to manage your asset files.</p>
jme3/external/blender.html:779:<p>There are many 3D model <a href="#../../jme3/features.html#supported-external-file-types#" class="page unresolved">Supported External File Types</a> for jMonkeyEngine. Some of them bake your actions automatically on export, others don&#8217;t. Baking is a destructive process so it is recommended that you test the animation in-game first. If your animations are all messed up, try baking them or use a different exporter.</p>
jme3/external/3dsmax.html:437:<p>For the managing of assets in general, be sure to read the <a href="#../../tutorials:intermediate/multi-media_asset_pipeline.adoc" class="page unresolved">Asset Pipeline Documentation</a>. It contains vital information on how to manage your asset files.</p>
jme3/advanced/nifty_gui.html:570:<p><a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-testdata/src/main/resources/Interface/Nifty/HelloJme.xml">HelloJme.xml</a> - Can be found in <a href="#../../sdk/sample_code.adoc#jme3testdata-assets#" class="page unresolved">jme-testdata/Interface/Nifty</a> also.</p>
jme3/advanced/nifty_gui.html:580:<p><a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/niftygui/TestNiftyGui.java">TestNiftyGui.java</a> - Can be found in <a href="#../../sdk/sample_code.adoc#the-jme3tests-project-template#" class="page unresolved">jme3 tests</a> also.</p>
jme3/advanced/nifty_gui.html:583:<p><a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/niftygui/TestNiftyToMesh.java">TestNiftyToMesh.java</a> - Can be found in <a href="#../../sdk/sample_code.adoc#the-jme3tests-project-template#" class="page unresolved">jme3 tests</a> also.</p>
jme3/advanced/update_loop.html:507:<p>In a trivial <a href="../intermediate/simpleapplication.html" class="page">SimpleApplication</a> (such as a <a href="#../../tutorials:beginner.adoc" class="page unresolved">Hello World tutorial</a>), all code is either in the <code>simpleInitApp()</code> (initialization) or <code>simpleUpdate()</code> (behaviour) method – or in a helper method/class that is called from one of these two. This trivial approach will make your main class very long, hard to read, and hard to maintain. You don&#8217;t need to load the whole scene at once, and you don&#8217;t need to run all conditionals tests all the time.</p>
jme3/advanced/material_definitions.html:462:<p>If you use one custom material with certain settings very often, learn about storing material settings in <a href="j3m_material_files.html" class="page">j3m Material Files</a>. You either <a href="#../../sdk/material_editing.adoc" class="page unresolved">use the jMonkeyEngine SDK to create .j3m files</a> (user-friendly), or you <a href="j3m_material_files.html" class="page">write .j3m files in a text editor</a> (IDE-independent).</p>
jme3/advanced/material_definitions.html:558:<p>For details see also: <a href="#../../tutorials:intermediate/how_to_use_materials.adoc" class="page unresolved">How to Use Materials</a></p>
jme3/advanced/materials_overview.html:457:<p>Find out quickly <a href="#../../tutorials:intermediate/how_to_use_materials.adoc" class="page unresolved">How to Use Materials</a>, including the most commonly used code samples and RenderStates.<br>
jme3/advanced/materials_overview.html:482:2) Use <a href="#../../sdk/material_editing.adoc" class="page unresolved">the SDK&#8217;s visual material editor</a> to try out and save material settings easily.<br>
jme3/advanced/materials_overview.html:483:3) The <a href="#../../sdk/code_editor.adoc" class="page unresolved">SDK&#8217;s Palette</a> contains drag&amp;drop code snippets for loading materials.</p>
jme3/advanced/materials_overview.html:537:<p>See also: <a href="#../../jme3/beginner/hello_material.adoc" class="page unresolved">Hello Material</a></p>
jme3/advanced/materials_overview.html:598:<p>See also: <a href="#../../jme3/beginner/hello_terrain.adoc" class="page unresolved">Hello Terrain</a></p>
jme3/advanced/materials_overview.html:677:<p>See also: <a href="#../../jme3/beginner/hello_effects.adoc" class="page unresolved">Hello Effects</a></p>
jme3/advanced/materials_overview.html:738:<p>See also: <a href="#../../jme3/beginner/hello_material.adoc" class="page unresolved">Hello Material</a></p>
jme3/advanced/animation.html:447:<p>What is required for an animated model? (<a href="#../../tutorials:intermediate/terminology.adoc#animation" class="page unresolved">See also: Animation terminology</a></p>
jme3/advanced/particle_emitters.html:448:<p>Use the <a href="#../../sdk/scene_explorer.adoc" class="page unresolved">Scene Explorer</a> in the <a href="#../../sdk.adoc" class="page unresolved">SDK</a> to design and preview effects.</p>
jme3/advanced/input_handling.html:1055:<p>For information regarding the connection state of a joystick see <a href="#../../jme3/beginner/hello_input_system.adoc#listening-for-joystick-connections" class="page unresolved">Listening for Joystick Connections</a>.</p>
jme3/advanced/terrain.html:452:<p><strong>Real-time editing:</strong> <a href="#../../sdk/terrain_editor.adoc" class="page unresolved">TerraMonkey terrains are editable in jMonkeyEngine SDK</a>, and you are able to modify them in real time, for example by raising and lowering the terrain.</p>
jme3/advanced/terrain.html:562:<p>We recommend to <a href="#../../sdk/terrain_editor.adoc" class="page unresolved">create and edit Splat Textures for terrains visually in the jMonkeyEngine SDK</a>, and not do it manually. If you are simply curious about how the SDK&#8217;s terrain texture plugin works, or if you indeed want to generate materials manually, then read on for the implementation details.</p>
jme3/advanced/terrain.html:746:<p>You can hand-paint Alpha, Diffuse, Glow, and Specular maps in a drawing program, like Photoshop. Define each splat texture in the Alpha Map in either Red, Green, Blue, or Alpha (=RGBA). The JmeTests project bundled in the <a href="#../../sdk.adoc" class="page unresolved">SDK</a> includes some image files that show you how this works. The example images show a terrain heightmap next to its Alpha Map (which has been prepare for 3 Diffuse Maps), and one examplary Diffuse/Normal Map pair.</p>
jme3/advanced/spatial.html:443:<p>If you think you need to understand the scene graph concept better, please read <a href="#../../tutorials:intermediate/scenegraph_for_dummies.adoc" class="page unresolved">Scenegraph for dummies</a> first.</p>
jme3/advanced/spatial.html:801:<p><a href="#../../jme3/intermediate/optimization.adoc" class="page unresolved">Optimization</a> – The GeometryBatchFactory class batches several Geometries into meshes with each their own texture.</p>
jme3/advanced/walking_character.html:437:<p>In the <a href="#../../jme3/beginner/hello_collision.adoc" class="page unresolved">Hello Collision</a> tutorial and the <a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/bullet/TestQ3.java">TestQ3.java</a> code sample you have seen how to create collidable landscapes and walk around in a first-person perspective. The first-person camera is enclosed by a collision shape and is steered by the BetterCharacterControl.</p>
jme3/advanced/loading_screen.html:447:<p>You need to add the jme3-niftygui and <a href="#../../sdk/sample_code.adoc#jme3testdata-assets#" class="page unresolved">jme3-test-data</a> libraries.</p>
jme3/advanced/level_of_detail.html:445:<p>For a demo, run <a href="https://github.com/jMonkeyEngine/jmonkeyengine/blob/master/jme3-examples/src/main/java/jme3test/stress/TestLodGeneration.java">TestLodGeneration.java</a> from <a href="#../../sdk/sample_code.adoc" class="page unresolved">JmeTests</a>, then press +/- and spacebar to experiment. The following screenshots show a monkey model with three reduced Levels of Detail:</p>
jme3/advanced/sky.html:549:<p><a href="#../../jme3/external/blender.html#skybox-baking#" class="page unresolved">SkyBox baking</a></p>
jme3/advanced/mixamo.html:1267:<p>Some export methods bake your actions automatically on export, others don&#8217;t. Test the animation in-game and if your animations are all messed up, try <a href="#../../jme3/external/blender/blender_action_baking.adoc" class="page unresolved">baking them</a> or use a different exporter.</p>
jme3/advanced/mixamo.html:1292:<p>See <a href="#../../jme3/beginner/hello_animation.adoc" class="page unresolved">Hello Animation</a> and <a href="animation.html" class="page">Animation in JME3</a> to learn how to use your animated model.</p>
jme3/advanced/save_and_load.html:440:<p>The jMonkeyEngine&#8217;s binary file format is called <code>.j3o</code>. You can convert, view and edit .j3o files and their materials in the jMonkeyEngine <a href="#../../sdk.adoc" class="page unresolved">SDK</a> and compose scenes (this does not include editing meshes). For the conversion, you can either use the BinaryExporters, or a context menu in the SDK.</p>
jme3/advanced/save_and_load.html:477:<p>The following example overrides <code>stop()</code> in SimpleApplication to save the rootNode to a file when the user quits the application. The saved rootNode is a normal .j3o binary file that you can open in the <a href="#../../sdk.adoc" class="page unresolved">SDK</a>.</p>
jme3/advanced/endless_terraingrid.html:568:<p><a href="#../../jme3/beginner/hello_terrain.adoc" class="page unresolved">jme3:beginner:hello_terrain</a></p>
jme3/advanced/effects_overview.html:719:<p><a href="#../../sdk:plugin/shaderblow.adoc" class="page unresolved">ShaderBlow - GLSL Shader Library</a></p>
jme3/advanced/jme3_ai.html:458:<p>To get the assets (3D models) used in this example, add the <a href="#../../sdk/sample_code.adoc#jme3testdata-assets#" class="page unresolved">jME3-testdata.jar</a> to your classpath.</p>
jme3/advanced/jme3_ai.html:952:<p>This tutorial makes use of the <a href="#../../jme3/beginner/hello_picking.adoc" class="page unresolved">Hello Picking</a> and <a href="mouse_picking.html#pick-a-target-using-the-mouse-pointer#" class="page">Mouse Picking</a> tutorials so you should already be familiar with this method for picking and how to add the <a href="#../../jme3/beginner/hello_input_system.adoc" class="page unresolved">input mappings</a> to your game. How you implement your ActionListener is up to you.</p>
jme3/advanced/3d_models.html:449:<p>Export the 3D model using a <a href="#../../jme3/features.html#supported-external-file-types#" class="page unresolved">Supported External File Type</a>.</p>
jme3/advanced/3d_models.html:473:<p>(For the release build:) Use one of methods recommended for your 3D model <a href="#../../jme3/features.html#supported-external-file-types#" class="page unresolved">Supported External File Type</a> to convert the model to .j3o format. You don&#8217;t need this step until you deploy your application if you are making frequent changes to your models, however, you should get into the habit of always converting your models.</p>
jme3/advanced/terrain_collision.html:764:<p><a href="#tutorials:advanced/terrain.adoc" class="page unresolved">Terrain</a></p>
